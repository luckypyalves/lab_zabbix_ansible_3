---
# tasks file for Common_RockyLinux
# -------------------------- Padronizar Ambiente Linux --------------------------------------#
#----------------------------------- --------------------------------------------------------#
- name: Setando timezone no Sistema Operacional. 
  timezone:
    name: "{{ timezone }}"
  tags: config_inicial
  when: ansible_facts['distribution_major_version'] == "8" 
#----------------------------------------------------------------------------------------------#
- name: Alterando o layout do teclado do sistema
  command: /bin/localectl set-keymap br-abnt2
  tags: config_inicial
  when: ansible_facts['distribution_major_version'] == "8"
#-----------------------------------------------------------------------------------------------#
- name: Adcionando Motd
  template: 
    src: motd.sh
    dest: /etc/motd.sh
    force: yes
    owner: root
    group: root
    mode: 0755
  tags: config_inicial
  when: ansible_facts['distribution_major_version'] == "8"
  #-------------------------------------------------------------------------------------------------#
- name: Mudando /etc/profile
  lineinfile: 
    dest: /etc/profile
    line: "{{ item }}"
  loop:
    - '#--- Default export & Alias ---#'
    - 'export HISTTIMEFORMAT="%d/%m/%Y - %H:%M:%S - "'
    - 'export HISTSIZE="5000"'
    - 'export HISTFILESIZE="5000"'
    - 'export TERM=linux'
    - 'alias ls="ls -lh --color"'
    - 'alias grep="grep --color"'
    - 'alias vi="vim"'
    - 'alias rm="rm -i"'
    - '/etc/motd.sh'
  tags: config_inicial
  when: ansible_facts['distribution_major_version'] == "8"
# -------------------------------------------------------------------------------------------------#
- name: Criando Diretorio Chaves Id_rsa
  file:
     path: /home/{{ username_so }}/.ssh/id_rsa
     state: directory
  tags: config_inicial
  when: ansible_facts['distribution_major_version'] == "8"
#---------------------------------------------------------------------------------------------------#
- name: Criando Usuario no Sistema
  user:
    name: "{{username_so }}"
    comment: "{{ username_so }}"
    shell: /bin/bash
    home: /home/{{ username_so }}
    password: "{{ userpass_so | password_hash('sha512') }}"
    update_password: on_create
    append: yes
  tags: config_inicial
  when: ansible_facts['distribution_major_version'] == "8"

#----------------------------------------------------------------------------------------------------#
- name: Add usuario no Sudoers
  lineinfile:
    dest: /etc/sudoers
    line: "{{ username_so }} ALL=(ALL:ALL) NOPASSWD: ALL"
  tags: config_inicial
  when: ansible_facts['distribution_major_version'] == "8"
#-----------------------------------------------------------------------------------------------------#
- name: BANNER | Adcionando banner ao usuario
  copy:
    src: banner_ssh
    dest: /etc/ssh/banner_ssh
  tags: config_inicial
  when: ansible_facts['distribution_major_version'] == "8"
#-----------------------------_#
- name: Gerando Chaves para Usuario ssh
  command: ssh-keygen -b 2048 -t rsa -f /home/{{ username_so }}/.ssh/id_rsa -N ''
  args:
    creates: /home/{{ username_so }}/.ssh
  become: yes
  become_user: "{{ username_so }}"
  tags: config_inicial
  when: ansible_facts['distribution_major_version'] == "8"
#------------------------------------------------------------------------------------------------------#
- name: Setando chave no authorized_key usuario
  authorized_key:
    user: "{{ username_so }}"
    state: present
    key: "{{ lookup('file', lookup('env','HOME') + '/.ssh/id_rsa.pub') }}"
  tags: config_inicial
  when: ansible_facts['distribution_major_version'] == "8"
#-------------------------------------------------------------------------------------------------#
- name: Atualizar o arquivo resolv.conf
  become: true
  copy:
    src: resolv.conf
    dest: /etc/resolv.conf
  tags: config_inicial
  when: ansible_facts['distribution_major_version'] == "8"
#------------------------------------------------------------------------------------------------#
- name: Add Mapeamento  to /etc/hosts
  blockinfile:
    path: /etc/hosts
    block: |
      {{ item.ip }} {{ item.name }}
    marker: "# {mark} ANSIBLE MANAGED BLOCK {{ item.name }}"
  loop:
    - { name: node01.front.local, ip: "{{ zbx_front }}" }
    - { name: node02.server.local, ip: "{{ zbx_srv }}" }
    - { name: node03.db.local, ip: "{{ zbx_db }}" }
    - { name: node04.prx.local, ip: "{{ zbx_proxy }}" }
  tags: config_inicial
  when: ansible_facts['distribution_major_version'] == "8"
#------------------------------------------------------------------------------------------------#
- name: Desabilitar Permanente SELINUX - Permanent
  replace:
      dest: /etc/selinux/config
      regexp: 'SELINUX=enforcing'
      replace: 'SELINUX=disabled'
  tags: config_inicial
  when: ansible_facts['distribution_major_version'] == "8"
#-------------------------------------------------------------------------------------------------#
- name: Atualizando Sistema Operacional / Cache do Sistema
  dnf: 
    name: '*'
    state: latest
    update_cache: yes
  tags: config_inicial
  when: ansible_facts['distribution_major_version'] == "8"
#---------------------------------------------------------------------------------------------------------#
- name: Remove pacotes Desnecessarios
  dnf:
    name: ['postfix']
    state: absent
  tags: config_inicial
  when: ansible_facts['distribution_major_version'] == "8"
#---------------------------------------------------------------------------------------------------------#
- name: Intalando lista de Pacotes
  dnf: 
     name: "{{ common_pacotes_redhat }}"
     state: latest
  tags: config_inicial
  when: ansible_facts['distribution_major_version'] == "8"
#----------------------------------------------------------------------------------------------------------#
- name: Habilitar e iniciar serviço do chronyd
  systemd:
     name: chronyd
     state: started
     enabled: yes
  tags: config_inicial
  when: ansible_facts['distribution_major_version'] == "8"
#-----------------------------------------------------------------------------------------------------------#
- name: Reiniciar serviço chronyd 
  systemd:
     name: chronyd
     state: restarted
     daemon_reload: yes
  tags: config_inicial
  when: ansible_facts['distribution_major_version'] == "8"
#-----------------------------------------------------------------------------------------------------------#
- name: Copiando Arquivo .vimrc default
  copy: 
    src: "{{ item.src }}" 
    dest: "{{ item.dest }}"
  loop:
    - { src: '.vimrc', dest: '/root/.vimrc'}
    - { src: '.vimrc', dest: '/home/{{ username_so }}/.vimrc'}
  tags: config_inicial
  when: ansible_facts['distribution_major_version'] == "8"
#--------------------------------------------------------------------------------------------------#
- name: Setando configurações de segurança no arquuivo sshd_config
  lineinfile:
    dest: /etc/ssh/sshd_config
    state: present
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    backrefs: yes
  loop:
    - { regexp: '#Banner none', line: 'Banner /etc/ssh/banner_ssh' }
    - { regexp: '#StrictModes yes', line: 'StrictModes yes' }
    - { regexp: 'X11Forwarding yes', line: 'X11Forwarding no' }
  tags: config_inicial
  when: ansible_facts['distribution_major_version'] == "8"
#-------------------------------------------------------------------------------------------------#
- name: Ativar o firewalld no Sistema
  systemd:
    name: firewalld
    state: started
    enabled: yes
  tags: config_inicial
  when: ansible_facts['distribution_major_version'] == "8"
#------------------------------------------------------------------------------------------------------------#
- name: Reload no firewalld
  systemd:
    name: firewalld
    state: reloaded
    enabled: yes
  tags: config_inicial
  when: ansible_facts['distribution_major_version'] == "8"
#------------------------------------------------------------------------------------------------------------#    
- name: Realizar Reboot Apos 1 minutos
  reboot:
    reboot_timeout: 300
  tags: config_inicial
  when: ansible_facts['distribution_major_version'] == "8"
