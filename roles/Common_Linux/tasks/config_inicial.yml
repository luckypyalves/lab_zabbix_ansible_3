---
# -------------------------- Padronizar Ambiente Linux --------------------------------------#
#----------------------------------- --------------------------------------------------------#
# Adcionar timezone da Cidade
- name: TIMEZONE | Setando timezone 
  timezone:
    name: "{{ timezone }}"
  tags: config_inicial
  when:
    #- ansible_facts['distribution'] == "RedHat"
    - ansible_facts['distribution_major_version'] == "8" 
  #(ansible_distribution_file_variety == "RedHat" and ansible_facts['distribution_major_version'] == "8")
  #ansible_os_family ==  "Rocky"
#----------------------------------------------------------------------------------------------#
# Alterando o layout do TECLADO
- name: Alterando o layout do teclado do sistema
  command: /bin/localectl set-keymap br-abnt2
  tags: config_inicial
  when: ansible_facts['distribution_major_version'] == "8"
 
  #ansible_distribution == "CentOS" or ansible_distribution_file_variety == "RedHat"
#-----------------------------------------------------------------------------------------------#
- name: Adcionando Motd
  template: 
    src: motd.sh
    dest: /etc/motd.sh
    force: yes
    owner: root
    group: root
    mode: 0755
  tags: config_inicial
  when: ansible_facts['distribution_major_version'] == "8"
  #-------------------------------------------------------------------------------------------------#
- name: Mudando /etc/profile
  lineinfile: 
    dest: /etc/profile
    line: "{{ item }}"
  loop:
    - '#--- Default export & Alias ---#'
    - 'export HISTTIMEFORMAT="%d/%m/%Y - %H:%M:%S - "'
    - 'export HISTSIZE="5000"'
    - 'export HISTFILESIZE="5000"'
    - 'export TERM=linux'
    - 'alias ls="ls -lh --color"'
    - 'alias grep="grep --color"'
    - 'alias vi="vim"'
    - 'alias rm="rm -i"'
    - '/etc/motd.sh'
  tags: config_inicial
  when: ansible_facts['distribution_major_version'] == "8"
# -------------------------------------------------------------------------------------------------#
# User | Criando Usuario Ansible

- name: DIRETORIO | Criando Diretorio 
  file:
     path: /home/ansible/.ssh/id_rsa
     state: directory
  tags: config_inicial
  when: ansible_facts['distribution_major_version'] == "8"

#---------------------------------------------------------------------------------------------------#
- name: USERS | Adcionando um Usuario
  user:
    name: ansible
    comment: "ansible"
    shell: /bin/bash
    home: /home/ansible
    password: "{{ ansible_pass }}"
  tags: config_inicial
  when: ansible_facts['distribution_major_version'] == "8"

#----------------------------------------------------------------------------------------------------#
- name: USERS | Add usuario ansible no Sudoers
  lineinfile:
    dest: /etc/sudoers
    line: "ansible ALL=(ALL:ALL) NOPASSWD: ALL"
  tags: config_inicial
  when: ansible_facts['distribution_major_version'] == "8"
#-----------------------------------------------------------------------------------------------------#
- name: BANNER | Adcionando banner ao usuario
  copy:
    src: banner_ssh
    dest: /etc/ssh/banner_ssh
  tags: config_inicial
  when: ansible_facts['distribution_major_version'] == "8"
#-----------------------------_#
- name: SSH | Gerando Chaves para Usuario ansible
  command: ssh-keygen -b 2048 -t rsa -f /home/ansible/.ssh/id_rsa -N ''
  args:
    creates: /home/ansible/.ssh
  become: yes
  become_user: ansible
  tags: config_inicial
  when: ansible_facts['distribution_major_version'] == "8"
#------------------------------------------------------------------------------------------------------#
- name: SSH | Setando chave no authorized_key usuario
  authorized_key:
    user: ansible
    state: present
    key: "{{ lookup('file', lookup('env','HOME') + '/.ssh/id_rsa.pub') }}"
  notify:
    - Restart ssh
  tags: config_inicial
  when: ansible_facts['distribution_major_version'] == "8"
# ------------------------------------------------------------------------------------------------------#
# # Inicializando as configurações dos servidores CENTOS|REDHAT
# - name: PowerTools | Adcionando Repositorio
#   dnf:
#     name: 'https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm'
#     state: present
#   tags: config_inicial
#   when: ansible_distribution == "CentOS" or ansible_distribution_file_variety == "RedHat"
# #--------------------------------------------------------------------------------------------------------#
# - name : PowerTools | Habilitando Repositorio
#   replace:
#     dest: /etc/yum.repos.d/CentOS-Linux-PowerTools.repo
#     regexp: 'enabled=0'
#     replace: 'enabled=1'
#   tags: config_inicial
#   when: ansible_distribution_major_version == "8"
#--------------------------------------------------------------------------------------------------------#
- name: SELINUX | Desabilitar SELINUX (Temp)
  selinux: 
    state: disabled
  tags: config_inicial
  when: ansible_facts['distribution_major_version'] == "8"
#--------------------------------------------------------------------------------------------------------#
- name: SELINUX | Desabilitar Permanente SELINUX - Permanent
  replace:
      dest: /etc/selinux/config
      regexp: 'SELINUX=enforcing'
      replace: 'SELINUX=disabled'
  tags: config_inicial
  when: ansible_facts['distribution_major_version'] == "8"
#---------------------------------------------------------------------------------------------------------#
- name: DNF | Atualizando Sistema / cache
  dnf: 
    name: '*'
    state: latest
    update_cache: yes
  tags: config_inicial
  when: ansible_facts['distribution_major_version'] == "8"
#---------------------------------------------------------------------------------------------------------#
- name: CENTOS - DNF | Remove pacotes
  dnf:
    name: ['postfix']
    state: absent
  tags: config_inicial
  when: ansible_facts['distribution_major_version'] == "8"
#---------------------------------------------------------------------------------------------------------#
- name: CENTOS - DNF | Intalando lista de Pacotes
  dnf: 
     name: "{{ common_pacotes_redhat }}"
     state: latest
  tags: config_inicial
  when: ansible_facts['distribution_major_version'] == "8"
#----------------------------------------------------------------------------------------------------------#
# CENTOS| REDHAT | Habilitando serviços na inicialização 
- name: CENTOS - SERVICE | Habilitar e iniciar serviços na inicialização
  systemd:
     name: chronyd
     state: started
     enabled: yes
  tags: config_inicial
  when: ansible_facts['distribution_major_version'] == "8"
#-----------------------------------------------------------------------------------------------------------#
# Realizar Restart da APP
- name: CENTOS - SERVICE | Reiniciar serviço chronyd 
  systemd:
     name: chronyd
     state: restarted
     daemon_reload: yes
  tags: config_inicial
  when: ansible_facts['distribution_major_version'] == "8"
#-----------------------------------------------------------------------------------------------------------#
- name: FIREWALL | Ativar o firewalld
  systemd:
    name: firewalld
    state: started
    enabled: yes
  tags: config_inicial
  when: ansible_facts['distribution_major_version'] == "8"
#------------------------------------------------------------------------------------------------------------#
- name: Reload no firewalld
  systemd:
    name: firewalld
    state: reloaded
    enabled: yes
  tags: config_inicial
  when: ansible_facts['distribution_major_version'] == "8"
#------------------------------------------------------------------------------------------------------------#    
- name: REBOOT | Realizar Reboot Apos 1 minutos
  reboot:
    reboot_timeout: 300
  tags: config_inicial
  when: ansible_facts['distribution_major_version'] == "8"
# ------------------------------------------------------------------------------------------------------------#
# Inicializando configurações de Servidores DEBIAN|UBUNTU
- name: DEBIAN/UBUNTU - APT | Atualizando Cache do Sistema
  apt: 
    update_cache: yes
  tags: config_inicial
  when: ansible_distribution == "Debian" or ansible_distribution == "Ubuntu"
#--------------------------------------------------------------------------------------------------------------#
- name: DEBIAN/UBUNTU - APT | Atualizando o Sistema
  apt: 
    name: "*" 
    state: latest
  tags: config_inicial
  when: ansible_distribution == "Debian" or ansible_distribution == "Ubuntu"
#---------------------------------------------------------------------------------------------------------------#
- name: DEBIAN/UBUNTU - APT | Intalando lista de Pacotes debian/ubuntu
  apt: 
    name: "{{ common_pacotes_debian }}" 
    state: latest
  tags: config_inicial
  when: ansible_distribution == "Debian" or ansible_distribution == "Ubuntu"
#----------------------------------------------------------------------------------------------------------------#
- name: DEBIAN/UBUNTU - SERVICE chronyd | Habilitar lista de serviço na inicialização UBUNTU|DEBIAN
  systemd:
     name: chronyd
     state: started
     enabled: yes
  tags: config_inicial
  when: ansible_distribution == "Debian" or ansible_distribution == "Ubuntu"
#-----------------------------------------------------------------------------------------------------------------#
- name: DEBIAN/UBUNTU - SERVICE chronyd | Reiniciar serviço UBUNTU|DEBIAN
  systemd:
     name: chronyd
     state: restarted
  tags: config_inicial
  when: ansible_distribution == "Debian" or ansible_distribution == "Ubuntu"
# -----------------------------------------------------------------------------------------------------------------#
- name: VIM | Copiando Arquivo .vimrc default
  copy: 
    src: "{{ item.src }}" 
    dest: "{{ item.dest }}"
  loop:
    - { src: '.vimrc', dest: '/root/.vimrc'}
    - { src: '.vimrc', dest: '/home/ansible/.vimrc'}
  tags: config_inicial
  when: ansible_facts['distribution_major_version'] == "8"
#-------------------------------------------------------------------------------------------------------------------#
- name: SSH | Setando configurações de segurança no arquuivo sshd_config
  lineinfile:
    dest: /etc/ssh/sshd_config
    state: present
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    backrefs: yes
  loop:
    #    - { regexp: '#Port 22', line: 'Port 62222' }
    #    - { regexp: '#PermitRootLogin yes', line: 'PermitRootLogin no' }
    - { regexp: '#Banner none', line: 'Banner /etc/ssh/banner_ssh' }
    - { regexp: '#StrictModes yes', line: 'StrictModes yes' }
    - { regexp: 'X11Forwarding yes', line: 'X11Forwarding no' }
  tags: config_inicial
  when: ansible_facts['distribution_major_version'] == "8"
