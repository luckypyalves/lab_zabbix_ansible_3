---
# tasks file for install_zabbix_server
# -------------------------------------------------------------------------------------------#
- name: Adcionando Repositorio Zabbix - CentOS8
  dnf:
    name: '{{ url_packages_zabbix }}'
    state: present
  tags: zabbix_server
  when: ansible_facts['distribution_major_version'] == "8"
# --------------------------------------------------------------------------------------------#
#
- name: Instalando pacotes zabbix-server zabbix-agent zabbix-sql-scripts
  dnf:
    name: '{{ packages_zabbix_server}}'
    state: latest
  tags: zabbix_server
  when: ansible_facts['distribution_major_version'] == "8"
# --------------------------------------------------------------------------------------------#
- name: Iniciar/ Habilitar zabbix-server / zabbix-agent2
  systemd:
    name: zabbix-server
    state: started
    enabled: yes
  tags: zabbix_server
  when: ansible_facts['distribution_major_version'] == "8"
#----------------------------------------------------------------------------------------------#
# - name: Iniciar/ Habilitar zabbix-server / zabbix-agent2
#   systemd:
#     name: zabbix-agent2
#     state: started
#     enabled: yes
#   tags: zabbix_server
#   when: ansible_facts['distribution_major_version'] == "8"

#----------------------------------------------------------------------------------------------#
#
- name: Adcionado Porta firewalld  Zabbix_Server/Zabbix_Agent
  firewalld:
    port: "{{ item }}"
    permanent: yes
    state: enabled
  loop:
    - 10051/tcp
    - 10050/tcp
    - 3306/tcp
    
  tags: zabbix_server
  when: ansible_facts['distribution_major_version'] == "8"
# ----------------------------------------------------------------------------------------------#
- name: Reload no firewalld
  systemd:
    name: firewalld
    state: reloaded
    enabled: yes
  tags: zabbix_server
  when: ansible_facts['distribution_major_version'] == "8"
#-------------------------------------------------------------------------------#
- name: SSH | Setando configurações de segurança no arquivo zabbix_server.conf
  lineinfile:
    dest: /etc/zabbix/zabbix_server.conf
    state: present
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    backrefs: yes
  loop:
    - { regexp: '# DBHost=localhost', line: 'DBHost={{ zbx_db }}' }
    - { regexp: 'DBName=zabbix', line: 'DBName={{ db_name }}' }
    - { regexp: 'DBUser=zabbix', line: 'DBUser={{ db_user_server }}' }
    - { regexp: '# DBPassword=', line: 'DBPassword={{ db_user_pass_server }}' }
    - { regexp: '# StartPollers=5', line: 'StartPollers=10' }
    - { regexp: '# StartPollers=5', line: 'StartPollers=10' }
    - { regexp: '# StartPingers=1', line: 'StartPingers=5' }
    - { regexp: '# CacheSize=8M', line: 'CacheSize=512M' }
    - { regexp: '# ValueCacheSize=8M', line: 'ValueCacheSize=1024M' }
    - { regexp: '# VMwareCacheSize=8M', line: 'VMwareCacheSize=1024M' }
  when: ansible_facts['distribution_major_version'] == "8"
  tags: zabbix_server
#-----------------------------------------------------------------------------------#
- name: MYCNF | Copiando Arquivo .my.cnf default
  copy: 
    src: "{{ item.src }}" 
    dest: "{{ item.dest }}"
    mode: 0644
  loop:
    - { src: '.my.cnf', dest: '/root/.my.cnf'}
  when: ansible_facts['distribution_major_version'] == "8"
#---------------------------------------------------------------------------------------------#
- name: MYCNF | Copiando Para realizar Particionamento do Banco de Dados.
  copy: 
    src: "{{ item.src }}" 
    dest: "{{ item.dest }}"
  loop:
    - { src: 'zbx_db_part.sql', dest: '/opt/zbx_db_part.sql'}
  when: ansible_facts['distribution_major_version'] == "8"
#-----------------------------------------------------------------------------------#
- name: Importando schema da database do zabbix servidor "{{ zbx_db }}"
  shell: "zcat /usr/share/doc/zabbix-sql-scripts/mysql/create.sql.gz | mysql -h 192.168.3.120 -u zabbix_server -pzabbix zabbix"
  ignore_errors: yes
  when: ansible_facts['distribution_major_version'] == "8"

- name: Habilitar a execução do 'zbx_db_part.sql' "{{ zbx_db }}"
  shell: "chmod +x /opt/zbx_db_part.sql"
  ignore_errors: yes
  when: ansible_facts['distribution_major_version'] == "8"


- name: Habilitar a execução do 'zbx_db_part.sql' "{{ zbx_db }}"
  shell: "dos2unix /opt/zbx_db_part.sql"
  ignore_errors: yes
  when: ansible_facts['distribution_major_version'] == "8"

- name: Realizar o particionamento no banco de dados "{{ zbx_db }}"
  shell: "mysql -h 192.168.3.120 -u zabbix_server -pzabbix zabbix < /opt/zbx_db_part.sql"
  ignore_errors: yes
  when: ansible_facts['distribution_major_version'] == "8"

- name: Realizar a configuração inicial de manutenção do banco "{{ zbx_db }}"
  shell: mysql -h 192.168.3.120 -u zabbix_server -pzabbix zabbix -e "CALL partition_maintenance_all('zabbix');"
  ignore_errors: yes
  when: ansible_facts['distribution_major_version'] == "8"

- name: Realizar a configuração inicial de manutenção do banco "{{ zbx_db }}"
  shell: mysql -h 192.168.3.120 -u zabbix_server -pzabbix zabbix -e "show create table history\G"
  ignore_errors: yes
  when: ansible_facts['distribution_major_version'] == "8"
  
- name: Realizar a configuração inicial de manutenção do banco "{{ zbx_db }}"
  shell: mysql -h 192.168.3.120 -u zabbix_server -pzabbix zabbix -e "show create table trends\G"
  ignore_errors: yes
  when: ansible_facts['distribution_major_version'] == "8"

# --------------------------------------------------------------------------------------------#
- name: Iniciar/ Restart Zabbix-Server
  systemd:
    name: "{{ item }}"
    state: restarted
    enabled: yes
  loop:
    - zabbix-server
    # - zabbix-agent2
  tags: zabbix_server
  when: ansible_facts['distribution_major_version'] == "8"
#----------------------------------------------------------------------------------------------#

...
